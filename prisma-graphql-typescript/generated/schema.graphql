### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type BatchPayload {
  count: Long!
}

scalar Long

type Mutation {
  createPost(data: PostCreateInput!): Post!
  createUser(data: UserCreateInput!): User!
  deletePost(where: PostWhereUniqueInput!): Post
  deletePostsOf(firstname: String): BatchPayload!
  deleteUser(where: UserWhereUniqueInput!): User
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
}

type Post {
  author: User
  content: String!
  id: ID!
  title: String!
}

input PostCreateInput {
  author: UserCreateOneInput
  content: String!
  id: ID
  title: String!
}

enum PostOrderByInput {
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input PostUpdateInput {
  author: UserUpdateOneInput
  content: String
  title: String
}

input PostWhereInput {
  AND: [PostWhereInput!]
  author: UserWhereInput
  content: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(after: String, before: String, first: Int, last: Int, orderBy: PostOrderByInput, skip: Int, where: PostWhereInput): [Post!]!
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
}

type User {
  firstname: String!
  id: ID!
  lastname: String!
}

input UserCreateInput {
  firstname: String!
  id: ID
  lastname: String!
}

input UserCreateOneInput {
  connect: UserWhereUniqueInput
  create: UserCreateInput
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  firstname_ASC
  firstname_DESC
  id_ASC
  id_DESC
  lastname_ASC
  lastname_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateDataInput {
  firstname: String
  lastname: String
}

input UserUpdateOneInput {
  connect: UserWhereUniqueInput
  create: UserCreateInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpsertNestedInput {
  create: UserCreateInput!
  update: UserUpdateDataInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  firstname: String
  firstname_contains: String
  firstname_ends_with: String
  firstname_gt: String
  firstname_gte: String
  firstname_in: [String!]
  firstname_lt: String
  firstname_lte: String
  firstname_not: String
  firstname_not_contains: String
  firstname_not_ends_with: String
  firstname_not_in: [String!]
  firstname_not_starts_with: String
  firstname_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lastname: String
  lastname_contains: String
  lastname_ends_with: String
  lastname_gt: String
  lastname_gte: String
  lastname_in: [String!]
  lastname_lt: String
  lastname_lte: String
  lastname_not: String
  lastname_not_contains: String
  lastname_not_ends_with: String
  lastname_not_in: [String!]
  lastname_not_starts_with: String
  lastname_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
}
